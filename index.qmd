---
title: "Diseños Experimentales"
author: 
  - name: Franklin Santos
    url: https://franklinsantosm.com
    affiliation: Universidad Austral de Chile
    orcid: 0000-0002-7509-2910
    email: franklin25santos@gmail.com
format: html
editor: visual
---

## Introducción al diseño de experimentos


### POTENCIA CÁLCULOS A PRIORI

```{r}
library(pwr)

pwr.t.test(d=.8, sig.level=.05, power=.9, type="two.sample",alternative="two.sided")

```

3. Queremos comparar 5 grupos, con 25 sujetos por grupo, para un nivel de significación del 5%. Calculamos la potencia de la prueba para distintos valores de tamaño de efecto (f2):

```{r}
pwr.anova.test(k=5,n=25,f=0.10,sig.level=.05) #power = 0.1180955
pwr.anova.test(k=5,n=25,f=0.25,sig.level=.05) #power = 0.5738
pwr.anova.test(k=5,n=25,f=0.40,sig.level=.05) #power = 0.9569163
```

La potencia será de
• 11.8% para detectar un efecto pequeño,
• 57.4% para detectar un efecto moderado y
• 95.7% para detectar un efecto grande.

## ANDEVA CON R-Studio para diseño experimental

Paquetes:

- `agricolae`: Procedimientos estadísticos básicos del diseño de experimentos, diseño de factor simple, bloques aleatorios, cuadrado latino, cuadrados grecolatinos, así como pruebas de diferencia de medias.
- `car`: técnicas para regresión aplicada
- `phia`: técnicas para graficar diseños experimentales
- `DoE.base`: apoyos para diseños factoriales
- `DoE.wrapper`: creación de diseños industriales e interactúa con otros paquetes para diseño de experimentos, diseños para estimar funciones cuadráticas tales como diseños compuestos centrales y diseños de Box-Behnken
- `FrF2`: Diseños factoriales a 2 niveles (2^k^) y factoriales fraccionados a 2 niveles (2^k-p^)
- `qualityTools`: Diseños factoriales a 2 niveles, factoriales fraccionados a 2 niveles, análisis de múltiples respuestas, diseños de superficie de respuesta, mezcla de diseños, Método Taguchi
- `rsm`: Metodología de superficie de respuesta

## Estadística de prueba: Obtención de la Tabla Andeva (ANOVA)

1. Importar los datos
Leer los datos en R Studio. Digitando directamente (copiar y pegar).

```{r}
nema<-c(170, 210, 205, 220, 210, 200, 205, 210, 195, 215, 92, 96, 82,
106, 114, 35, 28, 30, 32, 43, 68, 65, 72, 58, 74)
cultivar<- as.factor(c(rep(c("Huia","Kopu","Aran","Pitau","Will"), each=5)))
```


2. Explorar datos de la muestra
Estadística Descriptiva

Gráfico de caja y bigote

```{r}
boxplot(nema ~ cultivar, col = c("yellow", "blue",
"white","green","red"), ylab = "Número de
Nemátodo")
```

Medias de los tratamientos (niveles)

```{r}
tapply(nema, cultivar, mean)
tapply(nema, cultivar, sd)
tapply(nema, cultivar, range)
```


3. Obtención de tabla ANOVA Esta es la forma de pedir un ANOVA en R:

Códigos necesarios (cargar paquete agricolae)

```{r, eval=FALSE}
install.packages("agricolae")
```

```{r}
#Calculo Andeva del ejercicio de los nematodos según cultivar
library(agricolae)
an_e1<-aov(lm(nema~cultivar))
```


Salida computacional
```{r}
summary(an_e1)
```

## Practica 

### Importación de base de datos `1_Datos ejer Cap1.xlsx`

```{r}
library(readxl)
datadca <- read_excel("1_Datos ejer Cap1.xlsx",
                      sheet = "Eje1")
datadca
```

### Analisis descriptivo

```{r, message=FALSE}
library(metan)
desc_stat(datadca,
          stats = c("mean, se, kurt, skew, min, max")) %>%
  round_cols()
```
Box plot

```{r, message=FALSE}
library(tidyverse)
ggplot(data = datadca,
       aes(x=Cultivar,
           y=Nem,
           color=Cultivar)) +
  geom_boxplot() +
  geom_jitter() +
  stat_summary(fun = "mean", geom = "point", color = "black") +
  theme_classic() +
  theme(legend.position = "") +
  labs(x="Variedades",
       y="Número de nemátodos") 
```


### Analisis de varianza

```{r}
library(AgroR)
with(datadca, DIC(Cultivar, Nem, ylab = "Nemátodos")) # tukey
```



## Practica en clases (segunda clase)

Cargar la libreria para analizar datos

```{r}
library(tidyverse)
library(readxl)
library(agricolae)
```

Importamos la base de datos

```{r}
datadca <- read_excel("1_Datos ejer Cap1.xlsx",
                      sheet = "Eje1")
head(datadca)
```
Vemos que la variable cultivar esta en formato caracter, por tanto, se requiere la transformacion de datos como factor.

```{r}
## Transformacion de datos a factor y numerico
datadca = datadca%>%
  mutate_at(c('Cultivar'), as.factor)
head(datadca)
```
Una vez verificada que nuestras variables esten en formato fator y numerica se procede a realizar la respectiva analisis de varianza.


```{r}
### analisis de varianza
av_nema = aov(Nem~Cultivar, data = datadca)
summary(av_nema)
```
De acuerdo a la tabla de analisis de varianza rechazamos de la hipotesis nula y al menos existe diferencia significativa entre cultivares respecto al numero de nematodos.

Verificada la diferencia significativa, se procede a un analisis de medias para identificar el cultivar menos infestado con nematodos.

```{r}
### analisis de datos a posteriori
##prueba posteriori LSD
lsd_nem = LSD.test(av_nema, "Cultivar", group = T, console = T)
```

De acuerdo a los resultados de diferencia minima significativa se puede identificar que el cultivar `Pitau` tuvo una infestacion minima de nematodos.

Asimismo, se procede a analizar con la prueba de `TUKEY`

```{r}
##prueba posteriori TUKEY
dhs_nem = HSD.test(av_nema, "Cultivar", alpha = 0.01, group = T)
print(dhs_nem)

dhs_nem2 = TukeyHSD(av_nema, conf.level = .99, console = T, ordered = T)
dhs_nem2
```

La prueba de Tukey corrobora lo antes mencionado.


### Ejercicios de practica 

```{r}
## Segunda practica

dataEJ3 <- read_excel("1_Datos ejer Cap1.xlsx",
                      sheet = "Eje3")
head(dataEJ3)

## Transformacion de datos a factor y numerico
dataEJ3 = dataEJ3%>%
  mutate_at(c('Dieta'), as.factor)%>%
  mutate_at(c('C_suero'), as.numeric)
head(dataEJ3)

### analisis de varianza
av_dieta = aov(C_suero~Dieta, data = dataEJ3)
summary(av_dieta)

### analisis de datos a posteriori
##prueba posteriori TUKEY
dieta <- HSD.test(av_dieta, "Dieta", alpha=0.01, group=TRUE)
print(dieta)





#### Ejercicio 4
dataEJ4 <- read_excel("1_Datos ejer Cap1.xlsx",
                      sheet = "Eje4")
head(dataEJ4)

dataEJ4 = dataEJ4%>%
  mutate_at(c('Sector'), as.factor)
head(dataEJ4)

### analisis de varianza
av_sector = aov(salario~Sector, data = dataEJ4)
summary(av_sector)

### analisis de datos a posteriori

##prueba posteriori TUKEY
dhs_sector = HSD.test(av_sector, "Sector", alpha=0.01, group=T)
print(dhs_sector)


#### Ejercicio 2
dataEJ2 <- read_excel("1_Datos ejer Cap1.xlsx",
                      sheet = "Eje2")
head(dataEJ2)

## Transformacion de datos a factor y numerico
dataEJ2 = dataEJ2%>%
  mutate_at(c('Tipo_cereal'), as.factor)%>%
  mutate_at(c('C_tianina'), as.numeric)
head(dataEJ2)

### analisis de varianza
av_cereal = aov(C_tianina~Tipo_cereal, data = dataEJ2)
summary(av_cereal)

### analisis de datos a posteriori

##prueba posteriori TUKEY
dhs_cereal <- HSD.test(av_cereal, "Tipo_cereal", alpha=0.10, group=T)
print(dhs_cereal)


#### Ejecicio de colores 5
dataEJ5 <- read_excel("1_Datos ejer Cap1.xlsx",
                      sheet = "Eje5")
head(dataEJ5)

## Transformacion de datos a factor y numerico
dataEJ5 = dataEJ5%>%
  mutate_at(c('color'), as.factor)
head(dataEJ5)

### analisis de varianza
av_color = aov(insectos~color, data = dataEJ5)
summary(av_color)

### analisis de datos a posteriori

##prueba posteriori TUKEY
dhs_color <- HSD.test(av_color, "color", alpha=0.01, group=T)
print(dhs_color)


```


